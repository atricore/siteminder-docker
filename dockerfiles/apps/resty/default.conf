# nginx.vh.default.conf  --  docker-openresty
#
# This file is installed to:
#   `/etc/nginx/conf.d/default.conf`
#
# It tracks the `server` section of the upstream OpenResty's `nginx.conf`.
#
# This config (and any other configs in `etc/nginx/conf.d/`) is loaded by
# default by the `include` directive in `/usr/local/openresty/nginx/conf/nginx.conf`.
#
# See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
#


server {
    listen       80;
    server_name  localhost;
    underscores_in_headers on;
    resolver 127.0.0.11 ipv6=off;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;
    access_log /usr/local/openresty/nginx/logs/access.log;
    error_log /usr/local/openresty/nginx/logs/error.log;

    location /private {
      #wordpress_logged_in_70490311fe7c84acda8886406a6d884b=gbrigand|1643669282|xEXPofCp2LuCnHYtixd3Q0mQ9IDQ9AZMOwEnynnv81e|ea11a29f2b140be9de3aaa250e88e4863a4abcba4e1c63c09f141f28fc6729ab;
      #wordpress_70490311fe7c84acda8886406a6d884b=gbrigand%7C1643675398%7CEoYwD56aooIbNRW3wCfTQtG9nRrxkuPlzyzZEycNwje%7C8b9c6e5b69bf0ed5ba753cfb0d5dfbf3499d085a5c706049f858640292a88a59;
      #wordpress_c0c726a38100a2c8e684aedeb9ab748f=gbrigand%7C1643775177%7CH22FSKD3C1ie478mfUTLZjD61mZcXVNVLmInmYKECBC%7C7a557208f5ee76737323a8e12aed5b2c0ab239945cfe2273757cf1ca3586fbc9;
      #wordpress_logged_in_c0c726a38100a2c8e684aedeb9ab748f=gbrigand%7C1643775177%7CH22FSKD3C1ie478mfUTLZjD61mZcXVNVLmInmYKECBC%7Ca4b72aa6a46d5ec014a19da12c60b80e5bdcec8a1f40df96a150e715359fea77

      content_by_lua_block {

        local http = require "resty.http"
        local httpc = http.new()

        local xUser = ngx.req.get_headers()['x-user']
        if not xUser then
          xUser = ngx.req.get_headers()['sm_user']
        end 

        ngx.log(ngx.STDERR, 'USER:' ..xUser)

        local res, err = httpc:request_uri("http://argo.34.122.164.203.nip.io/api/v1/events/argo/okta-usradd",  {
        method = "POST", 
          headers = {
            ["Content-Type"] = "application/json"
          },
          body = {"{\"login\": \"" .. xUser .. "@atricore.com\", \"password\": \"@WSX3edc\", \"firstname\": \"" .. xUser .. "\", \"lastname\": \"adminls\"}"}
          })

        if err then 
          ngx.log(ngx.STDERR, err)
        else
          ngx.log(ngx.STDERR, 'REESPONSE STATUS:'..res.status)
        end

        return ngx.redirect("http://extapp.34.133.255.103.nip.io:9090/wp-admin/?autologin_code=B96K1wYhzEfgtTgjPDuid7DJOTaqoQ5T")
      }  
    }

    location /debug {
        default_type text/html;
        allow all;
        auth_basic off;

        content_by_lua '
          ngx.say("<html>")
          ngx.say("<body>")
          ngx.say("<table border=1>")
          local h = ngx.req.get_headers()
          for k, v in pairs(h) do
            ngx.say("<tr>")
            ngx.say("<td>" .. k .. "</td>")
            ngx.say("<td>" .. v .. "</td>")
            ngx.say("</tr>")
          end
          ngx.say("</table>")
          ngx.say("</body>")
          ngx.say("</html>")
        ';
    }

    location / {
        access_by_lua_block {
          local xUser = ngx.req.get_headers()['x-user']
          ngx.req.set_header('SM_USER', xUser)
        }
        proxy_pass http://34.133.255.103:8000/;
        proxy_redirect http://34.133.255.103:8000/ http://extapp.34.133.255.103.nip.io:9090/;
    }


    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           /usr/local/openresty/nginx/html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
